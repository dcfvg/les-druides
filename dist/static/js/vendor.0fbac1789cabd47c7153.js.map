{"version":3,"sources":["webpack:///static/js/vendor.0fbac1789cabd47c7153.js","webpack:///./~/Tabletop/src/tabletop.js","webpack:///./~/Tabletop/src/backbone.tabletopSync.js","webpack:///./~/process/browser.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js"],"names":["webpackJsonp","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","process","inNodeJS","browser","request","trim","supportsCORS","inLegacyIE","testXHR","XMLHttpRequest","withCredentials","window","e","indexOfProto","Array","prototype","indexOf","ttIndexOf","array","item","i","l","length","Tabletop","options","this","key","callback","wanted","simpleSheet","parseNumbers","wait","reverse","postProcess","debug","query","orderby","endpoint","singleton","simple_url","callbackContext","prettyColumnNames","proxy","replace","parameterize","log","test","match","models","model_names","base_json_path","fetch","callbacks","init","sheets","requestData","loadSheets","path","serverSideFetch","protocol","split","shift","location","injectScript","xhrFetch","xhr","XDomainRequest","open","self","onload","json","JSON","parse","responseText","console","error","call","send","callbackName","script","document","createElement","loadSheet","Date","Math","floor","random","args","slice","arguments","apply","parentNode","removeChild","url","src","encodeURIComponent","getElementsByTagName","appendChild","err","resp","body","isWanted","sheetName","data","all","addWanted","sheet","push","ilen","toLoad","googleSheetName","feed","title","$t","foundSheetNames","entry","content","linkIdx","link","sheet_id","href","pop","json_path","toLowerCase","sheetsToLoad","sheetReady","model","name","doCallback","that","Model","tabletop","onReady","msg","Function","j","jlen","column_names","elements","raw","original_columns","source","element","cell","isNaN","undefined","rowNumber","fetchPrettyColumns","ready","cellurl","loadPrettyColumns","pretty_columns","prettifyElements","ordered_pretty_names","pretty_elements","new_element","new_column_name","toArray","row","Backbone","tabletopSync","method","success","tabletopOptions","collection","instance","_","id","find","idAttribute","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","cachedSetTimeout","len","run","cachedClearTimeout","Item","fun","noop","setTimeout","Error","clearTimeout","nextTick","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","global","factory","Target","matcher","delegate","Matcher","target","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","handler","substr","route","eachRoute","baseRoute","hasOwnProperty","map","addRouteCallback","add","warn","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","isArray","Object","toString","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","names","specificity","charAt","segments","results","val","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","state","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","result","params","m","isDynamic","addSegment","currentState","eachChar","put","decodeQueryParamPart","part","warn$1","resolvePath","base","relative","append","stack","unshift","join","isPromise","p","then","getRouteConfig","component","$options","resolveAsyncComponent","cb","resolver","components","resolve","exports$1","Vue","_resolveComponent","Component","mapParams","stringify","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","next","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","constructor","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","router","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","isPlainObject","keys","forEach","resolvedVal","$set","isPlainOjbect","applyOverride","_Vue$util","util","extend","defineReactive","_init","root","_parent","parent","$router","$route","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","strats","config","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","bind","vm","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","hostname","port","toggleClasses","el","fn","_bind","isObject","addClass","removeClass","onPriority","priority","LINK_UPDATE","activeId","_this","String","childLinks","querySelectorAll","existingId","getAttribute","value","setAttribute","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","tagName","onClick","addEventListener","update","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","go","pathname","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","mode","formatPath","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","babelHelpers","classCallCheck","Constructor","TypeError","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","get","child","isEqual","chars","returned","oCreate","create","proto","F","splice","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","silent","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","_ref","onChange","baseEl","querySelector","start","listener","search","hash","stop","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","matched","reuseQueue","runQueue","_onTransitionValidated","_view","step","index","context","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","_suppress","onPromiseError","nextWithBoolean","res","ok","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","defineProperty","enumerable","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","installed","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","encodeURI","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","getElementById","scrollX","offsetTop","install","externalVue","use","set","obj","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","str","c","charCodeAt","_toString","toNumber","parsed","Number","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","ctx","list","OBJECT_STRING","def","writable","configurable","_debounce","func","timestamp","later","last","now","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","_keymap","pushFilter","filter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","expression","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","remove","direction","op","__v_trans","transitionEndEvent","_isCompiled","action","inDoc","node","doc","ownerDocument","documentElement","nodeType","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","event","useCapture","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","classList","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","props","type","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","watcher","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","getTrackByKey","trackByKey","getValue","multi","selected","_value","indexOf$1","keyFilter","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","callActivateHooks","called","total","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","descriptor","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","methods","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","noop$1","Directive","_locked","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","miscMixin","_applyFilters","oldValue","write","offset","read","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","definition","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","newer","older","returnEntry","defineProperties","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","afterGet","forContext","$forContext","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","prevKeys","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","activateHooks","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","modules","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","parts","addStyle","listToStyles","newStyles","media","sourceMap","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","sources","btoa","unescape","memoize","memo","isOldIE","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.0fbac1789cabd47c7153.js","sourcesContent":["webpackJsonp([2,0],[\n/* 0 */,\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process) {(function() {\n\t  \"use strict\";\n\t\n\t  var inNodeJS = false;\n\t  if (typeof process !== 'undefined' && !process.browser) {\n\t    inNodeJS = true;\n\t    var request = __webpack_require__(4)('request'.trim()); //prevents browserify from bundling the module\n\t  }\n\t\n\t  var supportsCORS = false;\n\t  var inLegacyIE = false;\n\t  try {\n\t    var testXHR = new XMLHttpRequest();\n\t    if (typeof testXHR.withCredentials !== 'undefined') {\n\t      supportsCORS = true;\n\t    } else {\n\t      if (\"XDomainRequest\" in window) {\n\t        supportsCORS = true;\n\t        inLegacyIE = true;\n\t      }\n\t    }\n\t  } catch (e) { }\n\t\n\t  // Create a simple indexOf function for support\n\t  // of older browsers.  Uses native indexOf if \n\t  // available.  Code similar to underscores.\n\t  // By making a separate function, instead of adding\n\t  // to the prototype, we will not break bad for loops\n\t  // in older browsers\n\t  var indexOfProto = Array.prototype.indexOf;\n\t  var ttIndexOf = function(array, item) {\n\t    var i = 0, l = array.length;\n\t    \n\t    if (indexOfProto && array.indexOf === indexOfProto) return array.indexOf(item);\n\t    for (; i < l; i++) if (array[i] === item) return i;\n\t    return -1;\n\t  };\n\t  \n\t  /*\n\t    Initialize with Tabletop.init( { key: '0AjAPaAU9MeLFdHUxTlJiVVRYNGRJQnRmSnQwTlpoUXc' } )\n\t      OR!\n\t    Initialize with Tabletop.init( { key: 'https://docs.google.com/spreadsheet/pub?hl=en_US&hl=en_US&key=0AjAPaAU9MeLFdHUxTlJiVVRYNGRJQnRmSnQwTlpoUXc&output=html&widget=true' } )\n\t      OR!\n\t    Initialize with Tabletop.init('0AjAPaAU9MeLFdHUxTlJiVVRYNGRJQnRmSnQwTlpoUXc')\n\t  */\n\t\n\t  var Tabletop = function(options) {\n\t    // Make sure Tabletop is being used as a constructor no matter what.\n\t    if(!this || !(this instanceof Tabletop)) {\n\t      return new Tabletop(options);\n\t    }\n\t    \n\t    if(typeof(options) === 'string') {\n\t      options = { key : options };\n\t    }\n\t\n\t    this.callback = options.callback;\n\t    this.wanted = options.wanted || [];\n\t    this.key = options.key;\n\t    this.simpleSheet = !!options.simpleSheet;\n\t    this.parseNumbers = !!options.parseNumbers;\n\t    this.wait = !!options.wait;\n\t    this.reverse = !!options.reverse;\n\t    this.postProcess = options.postProcess;\n\t    this.debug = !!options.debug;\n\t    this.query = options.query || '';\n\t    this.orderby = options.orderby;\n\t    this.endpoint = options.endpoint || \"https://spreadsheets.google.com\";\n\t    this.singleton = !!options.singleton;\n\t    this.simple_url = !!options.simple_url;\n\t    this.callbackContext = options.callbackContext;\n\t    // Default to on, unless there's a proxy, in which case it's default off\n\t    this.prettyColumnNames = typeof(options.prettyColumnNames) == 'undefined' ? !options.proxy : options.prettyColumnNames\n\t    \n\t    if(typeof(options.proxy) !== 'undefined') {\n\t      // Remove trailing slash, it will break the app\n\t      this.endpoint = options.proxy.replace(/\\/$/,'');\n\t      this.simple_url = true;\n\t      this.singleton = true;\n\t      // Let's only use CORS (straight JSON request) when\n\t      // fetching straight from Google\n\t      supportsCORS = false;\n\t    }\n\t    \n\t    this.parameterize = options.parameterize || false;\n\t    \n\t    if(this.singleton) {\n\t      if(typeof(Tabletop.singleton) !== 'undefined') {\n\t        this.log(\"WARNING! Tabletop singleton already defined\");\n\t      }\n\t      Tabletop.singleton = this;\n\t    }\n\t    \n\t    /* Be friendly about what you accept */\n\t    if(/key=/.test(this.key)) {\n\t      this.log(\"You passed an old Google Docs url as the key! Attempting to parse.\");\n\t      this.key = this.key.match(\"key=(.*?)(&|#|$)\")[1];\n\t    }\n\t\n\t    if(/pubhtml/.test(this.key)) {\n\t      this.log(\"You passed a new Google Spreadsheets url as the key! Attempting to parse.\");\n\t      this.key = this.key.match(\"d\\\\/(.*?)\\\\/pubhtml\")[1];\n\t    }\n\t\n\t    if(!this.key) {\n\t      this.log(\"You need to pass Tabletop a key!\");\n\t      return;\n\t    }\n\t\n\t    this.log(\"Initializing with key \" + this.key);\n\t\n\t    this.models = {};\n\t    this.model_names = [];\n\t\n\t    this.base_json_path = \"/feeds/worksheets/\" + this.key + \"/public/basic?alt=\";\n\t\n\t    if (inNodeJS || supportsCORS) {\n\t      this.base_json_path += 'json';\n\t    } else {\n\t      this.base_json_path += 'json-in-script';\n\t    }\n\t    \n\t    if(!this.wait) {\n\t      this.fetch();\n\t    }\n\t  };\n\t\n\t  // A global storage for callbacks.\n\t  Tabletop.callbacks = {};\n\t\n\t  // Backwards compatibility.\n\t  Tabletop.init = function(options) {\n\t    return new Tabletop(options);\n\t  };\n\t\n\t  Tabletop.sheets = function() {\n\t    this.log(\"Times have changed! You'll want to use var tabletop = Tabletop.init(...); tabletop.sheets(...); instead of Tabletop.sheets(...)\");\n\t  };\n\t\n\t  Tabletop.prototype = {\n\t\n\t    fetch: function(callback) {\n\t      if(typeof(callback) !== \"undefined\") {\n\t        this.callback = callback;\n\t      }\n\t      this.requestData(this.base_json_path, this.loadSheets);\n\t    },\n\t    \n\t    /*\n\t      This will call the environment appropriate request method.\n\t      \n\t      In browser it will use JSON-P, in node it will use request()\n\t    */\n\t    requestData: function(path, callback) {\n\t      if (inNodeJS) {\n\t        this.serverSideFetch(path, callback);\n\t      } else {\n\t        //CORS only works in IE8/9 across the same protocol\n\t        //You must have your server on HTTPS to talk to Google, or it'll fall back on injection\n\t        var protocol = this.endpoint.split(\"//\").shift() || \"http\";\n\t        if (supportsCORS && (!inLegacyIE || protocol === location.protocol)) {\n\t          this.xhrFetch(path, callback);\n\t        } else {\n\t          this.injectScript(path, callback);\n\t        }\n\t      }\n\t    },\n\t\n\t    /*\n\t      Use Cross-Origin XMLHttpRequest to get the data in browsers that support it.\n\t    */\n\t    xhrFetch: function(path, callback) {\n\t      //support IE8's separate cross-domain object\n\t      var xhr = inLegacyIE ? new XDomainRequest() : new XMLHttpRequest();\n\t      xhr.open(\"GET\", this.endpoint + path);\n\t      var self = this;\n\t      xhr.onload = function() {\n\t        try {\n\t          var json = JSON.parse(xhr.responseText);\n\t        } catch (e) {\n\t          console.error(e);\n\t        }\n\t        callback.call(self, json);\n\t      };\n\t      xhr.send();\n\t    },\n\t    \n\t    /*\n\t      Insert the URL into the page as a script tag. Once it's loaded the spreadsheet data\n\t      it triggers the callback. This helps you avoid cross-domain errors\n\t      http://code.google.com/apis/gdata/samples/spreadsheet_sample.html\n\t\n\t      Let's be plain-Jane and not use jQuery or anything.\n\t    */\n\t    injectScript: function(path, callback) {\n\t      var script = document.createElement('script');\n\t      var callbackName;\n\t      \n\t      if(this.singleton) {\n\t        if(callback === this.loadSheets) {\n\t          callbackName = 'Tabletop.singleton.loadSheets';\n\t        } else if (callback === this.loadSheet) {\n\t          callbackName = 'Tabletop.singleton.loadSheet';\n\t        }\n\t      } else {\n\t        var self = this;\n\t        callbackName = 'tt' + (+new Date()) + (Math.floor(Math.random()*100000));\n\t        // Create a temp callback which will get removed once it has executed,\n\t        // this allows multiple instances of Tabletop to coexist.\n\t        Tabletop.callbacks[ callbackName ] = function () {\n\t          var args = Array.prototype.slice.call( arguments, 0 );\n\t          callback.apply(self, args);\n\t          script.parentNode.removeChild(script);\n\t          delete Tabletop.callbacks[callbackName];\n\t        };\n\t        callbackName = 'Tabletop.callbacks.' + callbackName;\n\t      }\n\t      \n\t      var url = path + \"&callback=\" + callbackName;\n\t      \n\t      if(this.simple_url) {\n\t        // We've gone down a rabbit hole of passing injectScript the path, so let's\n\t        // just pull the sheet_id out of the path like the least efficient worker bees\n\t        if(path.indexOf(\"/list/\") !== -1) {\n\t          script.src = this.endpoint + \"/\" + this.key + \"-\" + path.split(\"/\")[4];\n\t        } else {\n\t          script.src = this.endpoint + \"/\" + this.key;\n\t        }\n\t      } else {\n\t        script.src = this.endpoint + url;\n\t      }\n\t      \n\t      if (this.parameterize) {\n\t        script.src = this.parameterize + encodeURIComponent(script.src);\n\t      }\n\t      \n\t      document.getElementsByTagName('script')[0].parentNode.appendChild(script);\n\t    },\n\t    \n\t    /* \n\t      This will only run if tabletop is being run in node.js\n\t    */\n\t    serverSideFetch: function(path, callback) {\n\t      var self = this\n\t      request({url: this.endpoint + path, json: true}, function(err, resp, body) {\n\t        if (err) {\n\t          return console.error(err);\n\t        }\n\t        callback.call(self, body);\n\t      });\n\t    },\n\t\n\t    /* \n\t      Is this a sheet you want to pull?\n\t      If { wanted: [\"Sheet1\"] } has been specified, only Sheet1 is imported\n\t      Pulls all sheets if none are specified\n\t    */\n\t    isWanted: function(sheetName) {\n\t      if(this.wanted.length === 0) {\n\t        return true;\n\t      } else {\n\t        return (ttIndexOf(this.wanted, sheetName) !== -1);\n\t      }\n\t    },\n\t    \n\t    /*\n\t      What gets send to the callback\n\t      if simpleSheet === true, then don't return an array of Tabletop.this.models,\n\t      only return the first one's elements\n\t    */\n\t    data: function() {\n\t      // If the instance is being queried before the data's been fetched\n\t      // then return undefined.\n\t      if(this.model_names.length === 0) {\n\t        return undefined;\n\t      }\n\t      if(this.simpleSheet) {\n\t        if(this.model_names.length > 1 && this.debug) {\n\t          this.log(\"WARNING You have more than one sheet but are using simple sheet mode! Don't blame me when something goes wrong.\");\n\t        }\n\t        return this.models[ this.model_names[0] ].all();\n\t      } else {\n\t        return this.models;\n\t      }\n\t    },\n\t\n\t    /*\n\t      Add another sheet to the wanted list\n\t    */\n\t    addWanted: function(sheet) {\n\t      if(ttIndexOf(this.wanted, sheet) === -1) {\n\t        this.wanted.push(sheet);\n\t      }\n\t    },\n\t    \n\t    /*\n\t      Load all worksheets of the spreadsheet, turning each into a Tabletop Model.\n\t      Need to use injectScript because the worksheet view that you're working from\n\t      doesn't actually include the data. The list-based feed (/feeds/list/key..) does, though.\n\t      Calls back to loadSheet in order to get the real work done.\n\t\n\t      Used as a callback for the worksheet-based JSON\n\t    */\n\t    loadSheets: function(data) {\n\t      var i, ilen;\n\t      var toLoad = [];\n\t      this.googleSheetName = data.feed.title.$t;\n\t      this.foundSheetNames = [];\n\t\n\t      for(i = 0, ilen = data.feed.entry.length; i < ilen ; i++) {\n\t        this.foundSheetNames.push(data.feed.entry[i].title.$t);\n\t        // Only pull in desired sheets to reduce loading\n\t        if( this.isWanted(data.feed.entry[i].content.$t) ) {\n\t          var linkIdx = data.feed.entry[i].link.length-1;\n\t          var sheet_id = data.feed.entry[i].link[linkIdx].href.split('/').pop();\n\t          var json_path = \"/feeds/list/\" + this.key + \"/\" + sheet_id + \"/public/values?alt=\"\n\t          if (inNodeJS || supportsCORS) {\n\t            json_path += 'json';\n\t          } else {\n\t            json_path += 'json-in-script';\n\t          }\n\t          if(this.query) {\n\t            json_path += \"&sq=\" + this.query;\n\t          }\n\t          if(this.orderby) {\n\t            json_path += \"&orderby=column:\" + this.orderby.toLowerCase();\n\t          }\n\t          if(this.reverse) {\n\t            json_path += \"&reverse=true\";\n\t          }\n\t          toLoad.push(json_path);\n\t        }\n\t      }\n\t\n\t      this.sheetsToLoad = toLoad.length;\n\t      for(i = 0, ilen = toLoad.length; i < ilen; i++) {\n\t        this.requestData(toLoad[i], this.loadSheet);\n\t      }\n\t    },\n\t\n\t    /*\n\t      Access layer for the this.models\n\t      .sheets() gets you all of the sheets\n\t      .sheets('Sheet1') gets you the sheet named Sheet1\n\t    */\n\t    sheets: function(sheetName) {\n\t      if(typeof sheetName === \"undefined\") {\n\t        return this.models;\n\t      } else {\n\t        if(typeof(this.models[ sheetName ]) === \"undefined\") {\n\t          // alert( \"Can't find \" + sheetName );\n\t          return;\n\t        } else {\n\t          return this.models[ sheetName ];\n\t        }\n\t      }\n\t    },\n\t\n\t    sheetReady: function(model) {\n\t      this.models[ model.name ] = model;\n\t      if(ttIndexOf(this.model_names, model.name) === -1) {\n\t        this.model_names.push(model.name);\n\t      }\n\t\n\t      this.sheetsToLoad--;\n\t      if(this.sheetsToLoad === 0)\n\t        this.doCallback();\n\t    },\n\t    \n\t    /*\n\t      Parse a single list-based worksheet, turning it into a Tabletop Model\n\t\n\t      Used as a callback for the list-based JSON\n\t    */\n\t    loadSheet: function(data) {\n\t      var that = this;\n\t      var model = new Tabletop.Model( { data: data, \n\t                                        parseNumbers: this.parseNumbers,\n\t                                        postProcess: this.postProcess,\n\t                                        tabletop: this,\n\t                                        prettyColumnNames: this.prettyColumnNames,\n\t                                        onReady: function() {\n\t                                          that.sheetReady(this);\n\t                                        } } );\n\t    },\n\t\n\t    /*\n\t      Execute the callback upon loading! Rely on this.data() because you might\n\t        only request certain pieces of data (i.e. simpleSheet mode)\n\t      Tests this.sheetsToLoad just in case a race condition happens to show up\n\t    */\n\t    doCallback: function() {\n\t      if(this.sheetsToLoad === 0) {\n\t        this.callback.apply(this.callbackContext || this, [this.data(), this]);\n\t      }\n\t    },\n\t\n\t    log: function(msg) {\n\t      if(this.debug) {\n\t        if(typeof console !== \"undefined\" && typeof console.log !== \"undefined\") {\n\t          Function.prototype.apply.apply(console.log, [console, arguments]);\n\t        }\n\t      }\n\t    }\n\t\n\t  };\n\t\n\t  /*\n\t    Tabletop.Model stores the attribute names and parses the worksheet data\n\t      to turn it into something worthwhile\n\t\n\t    Options should be in the format { data: XXX }, with XXX being the list-based worksheet\n\t  */\n\t  Tabletop.Model = function(options) {\n\t    var i, j, ilen, jlen;\n\t    this.column_names = [];\n\t    this.name = options.data.feed.title.$t;\n\t    this.tabletop = options.tabletop;\n\t    this.elements = [];\n\t    this.onReady = options.onReady;\n\t    this.raw = options.data; // A copy of the sheet's raw data, for accessing minutiae\n\t\n\t    if(typeof(options.data.feed.entry) === 'undefined') {\n\t      options.tabletop.log(\"Missing data for \" + this.name + \", make sure you didn't forget column headers\");\n\t      this.original_columns = [];\n\t      this.elements = [];\n\t      this.onReady.call(this);\n\t      return;\n\t    }\n\t    \n\t    for(var key in options.data.feed.entry[0]){\n\t      if(/^gsx/.test(key))\n\t        this.column_names.push( key.replace(\"gsx$\",\"\") );\n\t    }\n\t\n\t    this.original_columns = this.column_names;\n\t    \n\t    for(i = 0, ilen =  options.data.feed.entry.length ; i < ilen; i++) {\n\t      var source = options.data.feed.entry[i];\n\t      var element = {};\n\t      for(var j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n\t        var cell = source[ \"gsx$\" + this.column_names[j] ];\n\t        if (typeof(cell) !== 'undefined') {\n\t          if(options.parseNumbers && cell.$t !== '' && !isNaN(cell.$t))\n\t            element[ this.column_names[j] ] = +cell.$t;\n\t          else\n\t            element[ this.column_names[j] ] = cell.$t;\n\t        } else {\n\t            element[ this.column_names[j] ] = '';\n\t        }\n\t      }\n\t      if(element.rowNumber === undefined)\n\t        element.rowNumber = i + 1;\n\t      if( options.postProcess )\n\t        options.postProcess(element);\n\t      this.elements.push(element);\n\t    }\n\t    \n\t    if(options.prettyColumnNames)\n\t      this.fetchPrettyColumns();\n\t    else\n\t      this.onReady.call(this);\n\t  };\n\t\n\t  Tabletop.Model.prototype = {\n\t    /*\n\t      Returns all of the elements (rows) of the worksheet as objects\n\t    */\n\t    all: function() {\n\t      return this.elements;\n\t    },\n\t    \n\t    fetchPrettyColumns: function() {\n\t      if(!this.raw.feed.link[3])\n\t        return this.ready();\n\t      var cellurl = this.raw.feed.link[3].href.replace('/feeds/list/', '/feeds/cells/').replace('https://spreadsheets.google.com', '');\n\t      var that = this;\n\t      this.tabletop.requestData(cellurl, function(data) {\n\t        that.loadPrettyColumns(data)\n\t      });\n\t    },\n\t    \n\t    ready: function() {\n\t      this.onReady.call(this);\n\t    },\n\t    \n\t    /*\n\t     * Store column names as an object\n\t     * with keys of Google-formatted \"columnName\"\n\t     * and values of human-readable \"Column name\"\n\t     */\n\t    loadPrettyColumns: function(data) {\n\t      var pretty_columns = {};\n\t\n\t      var column_names = this.column_names;\n\t\n\t      var i = 0;\n\t      var l = column_names.length;\n\t\n\t      for (; i < l; i++) {\n\t        if (typeof data.feed.entry[i].content.$t !== 'undefined') {\n\t          pretty_columns[column_names[i]] = data.feed.entry[i].content.$t;\n\t        } else {\n\t          pretty_columns[column_names[i]] = column_names[i];\n\t        }\n\t      }\n\t\n\t      this.pretty_columns = pretty_columns;\n\t\n\t      this.prettifyElements();\n\t      this.ready();\n\t    },\n\t    \n\t    /*\n\t     * Go through each row, substitutiting\n\t     * Google-formatted \"columnName\"\n\t     * with human-readable \"Column name\"\n\t     */\n\t    prettifyElements: function() {\n\t      var pretty_elements = [],\n\t          ordered_pretty_names = [],\n\t          i, j, ilen, jlen;\n\t\n\t      var ordered_pretty_names;\n\t      for(j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n\t        ordered_pretty_names.push(this.pretty_columns[this.column_names[j]]);\n\t      }\n\t\n\t      for(i = 0, ilen = this.elements.length; i < ilen; i++) {\n\t        var new_element = {};\n\t        for(j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n\t          var new_column_name = this.pretty_columns[this.column_names[j]];\n\t          new_element[new_column_name] = this.elements[i][this.column_names[j]];\n\t        }\n\t        pretty_elements.push(new_element);\n\t      }\n\t      this.elements = pretty_elements;\n\t      this.column_names = ordered_pretty_names;\n\t    },\n\t\n\t    /*\n\t      Return the elements as an array of arrays, instead of an array of objects\n\t    */\n\t    toArray: function() {\n\t      var array = [],\n\t          i, j, ilen, jlen;\n\t      for(i = 0, ilen = this.elements.length; i < ilen; i++) {\n\t        var row = [];\n\t        for(j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n\t          row.push( this.elements[i][ this.column_names[j] ] );\n\t        }\n\t        array.push(row);\n\t      }\n\t      return array;\n\t    }\n\t  };\n\t\n\t  if(typeof module !== \"undefined\" && module.exports) { //don't just use inNodeJS, we may be in Browserify\n\t    module.exports = Tabletop;\n\t  } else if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t        return Tabletop;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else {\n\t    window.Tabletop = Tabletop;\n\t  }\n\t\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\t/* \n\t  A drop-in read-only Google-Spreadsheets-backed replacement for Backbone.sync\n\t\n\t  Tabletop must be successfully initialized prior to using fetch()\n\t\n\t  Backbone.tabletopSync only supports the 'read' method, and will fail\n\t    loudly on any other operations\n\t*/\n\t\n\tBackbone.tabletopSync = function(method, model, options, error) {\n\t  // Backwards compatibility with Backbone <= 0.3.3\n\t  if (typeof options == 'function') {\n\t    options = {\n\t      success: options,\n\t      error: error\n\t    };\n\t  }\n\t  \n\t  var resp;\n\t\n\t  var tabletopOptions = model.tabletop || model.collection.tabletop;\n\t\n\t  var instance = tabletopOptions.instance;\n\t\n\t  if(typeof(instance) == \"undefined\") {\n\t    instance = Tabletop.init( { key: tabletopOptions.key,\n\t                                wanted: [ tabletopOptions.sheet ],\n\t                                wait: true } )\n\t    tabletopOptions.instance = instance;\n\t  } else {\n\t    instance.addWanted(tabletopOptions.sheet);\n\t  }\n\t  \n\t  if(typeof(tabletopOptions.sheet) == \"undefined\") {\n\t    return;\n\t  }\n\t  \n\t  var sheet = instance.sheets( tabletopOptions.sheet );\n\t\n\t  if(typeof(sheet) === \"undefined\") {\n\t    // Hasn't been fetched yet, let's fetch!\n\t    \n\t    // Let's make sure we aren't re-requesting a sheet that doesn't exist\n\t    if(typeof(instance.foundSheetNames) !== 'undefined' && _.indexOf(instance.foundSheetNames, tabletopOptions.sheet) === -1) {\n\t      throw(\"Can't seem to find sheet \" + tabletopOptions.sheet);\n\t    }\n\t\n\t    instance.fetch( function() {\n\t      Backbone.tabletopSync(method, model, options, error);\n\t    })\n\t    return;\n\t  }\n\t  \n\t  switch (method) {\n\t    case \"read\":\n\t      if(model.id) {\n\t        resp = _.find( sheet.all(), function(item) {\n\t          return model.id == item[model.idAttribute];\n\t        }, this);\n\t      } else {\n\t        resp = sheet.all();\n\t      }\n\t      break;\n\t    default:\n\t      throw(\"Backbone.tabletopSync is read-only\");\n\t  }\n\t\n\t  if (resp) {\n\t    options.success(resp);\n\t  } else {\n\t    options.error(\"Record not found\");\n\t  }\n\t\n\t};\n\n/***/ },\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\t(function () {\n\t  try {\n\t    cachedSetTimeout = setTimeout;\n\t  } catch (e) {\n\t    cachedSetTimeout = function () {\n\t      throw new Error('setTimeout is not defined');\n\t    }\n\t  }\n\t  try {\n\t    cachedClearTimeout = clearTimeout;\n\t  } catch (e) {\n\t    cachedClearTimeout = function () {\n\t      throw new Error('clearTimeout is not defined');\n\t    }\n\t  }\n\t} ())\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = cachedSetTimeout.call(null, cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    cachedClearTimeout.call(null, timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        cachedSetTimeout.call(null, drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/vendor.0fbac1789cabd47c7153.js\n **/","(function() {\n  \"use strict\";\n\n  var inNodeJS = false;\n  if (typeof process !== 'undefined' && !process.browser) {\n    inNodeJS = true;\n    var request = require('request'.trim()); //prevents browserify from bundling the module\n  }\n\n  var supportsCORS = false;\n  var inLegacyIE = false;\n  try {\n    var testXHR = new XMLHttpRequest();\n    if (typeof testXHR.withCredentials !== 'undefined') {\n      supportsCORS = true;\n    } else {\n      if (\"XDomainRequest\" in window) {\n        supportsCORS = true;\n        inLegacyIE = true;\n      }\n    }\n  } catch (e) { }\n\n  // Create a simple indexOf function for support\n  // of older browsers.  Uses native indexOf if \n  // available.  Code similar to underscores.\n  // By making a separate function, instead of adding\n  // to the prototype, we will not break bad for loops\n  // in older browsers\n  var indexOfProto = Array.prototype.indexOf;\n  var ttIndexOf = function(array, item) {\n    var i = 0, l = array.length;\n    \n    if (indexOfProto && array.indexOf === indexOfProto) return array.indexOf(item);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n  \n  /*\n    Initialize with Tabletop.init( { key: '0AjAPaAU9MeLFdHUxTlJiVVRYNGRJQnRmSnQwTlpoUXc' } )\n      OR!\n    Initialize with Tabletop.init( { key: 'https://docs.google.com/spreadsheet/pub?hl=en_US&hl=en_US&key=0AjAPaAU9MeLFdHUxTlJiVVRYNGRJQnRmSnQwTlpoUXc&output=html&widget=true' } )\n      OR!\n    Initialize with Tabletop.init('0AjAPaAU9MeLFdHUxTlJiVVRYNGRJQnRmSnQwTlpoUXc')\n  */\n\n  var Tabletop = function(options) {\n    // Make sure Tabletop is being used as a constructor no matter what.\n    if(!this || !(this instanceof Tabletop)) {\n      return new Tabletop(options);\n    }\n    \n    if(typeof(options) === 'string') {\n      options = { key : options };\n    }\n\n    this.callback = options.callback;\n    this.wanted = options.wanted || [];\n    this.key = options.key;\n    this.simpleSheet = !!options.simpleSheet;\n    this.parseNumbers = !!options.parseNumbers;\n    this.wait = !!options.wait;\n    this.reverse = !!options.reverse;\n    this.postProcess = options.postProcess;\n    this.debug = !!options.debug;\n    this.query = options.query || '';\n    this.orderby = options.orderby;\n    this.endpoint = options.endpoint || \"https://spreadsheets.google.com\";\n    this.singleton = !!options.singleton;\n    this.simple_url = !!options.simple_url;\n    this.callbackContext = options.callbackContext;\n    // Default to on, unless there's a proxy, in which case it's default off\n    this.prettyColumnNames = typeof(options.prettyColumnNames) == 'undefined' ? !options.proxy : options.prettyColumnNames\n    \n    if(typeof(options.proxy) !== 'undefined') {\n      // Remove trailing slash, it will break the app\n      this.endpoint = options.proxy.replace(/\\/$/,'');\n      this.simple_url = true;\n      this.singleton = true;\n      // Let's only use CORS (straight JSON request) when\n      // fetching straight from Google\n      supportsCORS = false;\n    }\n    \n    this.parameterize = options.parameterize || false;\n    \n    if(this.singleton) {\n      if(typeof(Tabletop.singleton) !== 'undefined') {\n        this.log(\"WARNING! Tabletop singleton already defined\");\n      }\n      Tabletop.singleton = this;\n    }\n    \n    /* Be friendly about what you accept */\n    if(/key=/.test(this.key)) {\n      this.log(\"You passed an old Google Docs url as the key! Attempting to parse.\");\n      this.key = this.key.match(\"key=(.*?)(&|#|$)\")[1];\n    }\n\n    if(/pubhtml/.test(this.key)) {\n      this.log(\"You passed a new Google Spreadsheets url as the key! Attempting to parse.\");\n      this.key = this.key.match(\"d\\\\/(.*?)\\\\/pubhtml\")[1];\n    }\n\n    if(!this.key) {\n      this.log(\"You need to pass Tabletop a key!\");\n      return;\n    }\n\n    this.log(\"Initializing with key \" + this.key);\n\n    this.models = {};\n    this.model_names = [];\n\n    this.base_json_path = \"/feeds/worksheets/\" + this.key + \"/public/basic?alt=\";\n\n    if (inNodeJS || supportsCORS) {\n      this.base_json_path += 'json';\n    } else {\n      this.base_json_path += 'json-in-script';\n    }\n    \n    if(!this.wait) {\n      this.fetch();\n    }\n  };\n\n  // A global storage for callbacks.\n  Tabletop.callbacks = {};\n\n  // Backwards compatibility.\n  Tabletop.init = function(options) {\n    return new Tabletop(options);\n  };\n\n  Tabletop.sheets = function() {\n    this.log(\"Times have changed! You'll want to use var tabletop = Tabletop.init(...); tabletop.sheets(...); instead of Tabletop.sheets(...)\");\n  };\n\n  Tabletop.prototype = {\n\n    fetch: function(callback) {\n      if(typeof(callback) !== \"undefined\") {\n        this.callback = callback;\n      }\n      this.requestData(this.base_json_path, this.loadSheets);\n    },\n    \n    /*\n      This will call the environment appropriate request method.\n      \n      In browser it will use JSON-P, in node it will use request()\n    */\n    requestData: function(path, callback) {\n      if (inNodeJS) {\n        this.serverSideFetch(path, callback);\n      } else {\n        //CORS only works in IE8/9 across the same protocol\n        //You must have your server on HTTPS to talk to Google, or it'll fall back on injection\n        var protocol = this.endpoint.split(\"//\").shift() || \"http\";\n        if (supportsCORS && (!inLegacyIE || protocol === location.protocol)) {\n          this.xhrFetch(path, callback);\n        } else {\n          this.injectScript(path, callback);\n        }\n      }\n    },\n\n    /*\n      Use Cross-Origin XMLHttpRequest to get the data in browsers that support it.\n    */\n    xhrFetch: function(path, callback) {\n      //support IE8's separate cross-domain object\n      var xhr = inLegacyIE ? new XDomainRequest() : new XMLHttpRequest();\n      xhr.open(\"GET\", this.endpoint + path);\n      var self = this;\n      xhr.onload = function() {\n        try {\n          var json = JSON.parse(xhr.responseText);\n        } catch (e) {\n          console.error(e);\n        }\n        callback.call(self, json);\n      };\n      xhr.send();\n    },\n    \n    /*\n      Insert the URL into the page as a script tag. Once it's loaded the spreadsheet data\n      it triggers the callback. This helps you avoid cross-domain errors\n      http://code.google.com/apis/gdata/samples/spreadsheet_sample.html\n\n      Let's be plain-Jane and not use jQuery or anything.\n    */\n    injectScript: function(path, callback) {\n      var script = document.createElement('script');\n      var callbackName;\n      \n      if(this.singleton) {\n        if(callback === this.loadSheets) {\n          callbackName = 'Tabletop.singleton.loadSheets';\n        } else if (callback === this.loadSheet) {\n          callbackName = 'Tabletop.singleton.loadSheet';\n        }\n      } else {\n        var self = this;\n        callbackName = 'tt' + (+new Date()) + (Math.floor(Math.random()*100000));\n        // Create a temp callback which will get removed once it has executed,\n        // this allows multiple instances of Tabletop to coexist.\n        Tabletop.callbacks[ callbackName ] = function () {\n          var args = Array.prototype.slice.call( arguments, 0 );\n          callback.apply(self, args);\n          script.parentNode.removeChild(script);\n          delete Tabletop.callbacks[callbackName];\n        };\n        callbackName = 'Tabletop.callbacks.' + callbackName;\n      }\n      \n      var url = path + \"&callback=\" + callbackName;\n      \n      if(this.simple_url) {\n        // We've gone down a rabbit hole of passing injectScript the path, so let's\n        // just pull the sheet_id out of the path like the least efficient worker bees\n        if(path.indexOf(\"/list/\") !== -1) {\n          script.src = this.endpoint + \"/\" + this.key + \"-\" + path.split(\"/\")[4];\n        } else {\n          script.src = this.endpoint + \"/\" + this.key;\n        }\n      } else {\n        script.src = this.endpoint + url;\n      }\n      \n      if (this.parameterize) {\n        script.src = this.parameterize + encodeURIComponent(script.src);\n      }\n      \n      document.getElementsByTagName('script')[0].parentNode.appendChild(script);\n    },\n    \n    /* \n      This will only run if tabletop is being run in node.js\n    */\n    serverSideFetch: function(path, callback) {\n      var self = this\n      request({url: this.endpoint + path, json: true}, function(err, resp, body) {\n        if (err) {\n          return console.error(err);\n        }\n        callback.call(self, body);\n      });\n    },\n\n    /* \n      Is this a sheet you want to pull?\n      If { wanted: [\"Sheet1\"] } has been specified, only Sheet1 is imported\n      Pulls all sheets if none are specified\n    */\n    isWanted: function(sheetName) {\n      if(this.wanted.length === 0) {\n        return true;\n      } else {\n        return (ttIndexOf(this.wanted, sheetName) !== -1);\n      }\n    },\n    \n    /*\n      What gets send to the callback\n      if simpleSheet === true, then don't return an array of Tabletop.this.models,\n      only return the first one's elements\n    */\n    data: function() {\n      // If the instance is being queried before the data's been fetched\n      // then return undefined.\n      if(this.model_names.length === 0) {\n        return undefined;\n      }\n      if(this.simpleSheet) {\n        if(this.model_names.length > 1 && this.debug) {\n          this.log(\"WARNING You have more than one sheet but are using simple sheet mode! Don't blame me when something goes wrong.\");\n        }\n        return this.models[ this.model_names[0] ].all();\n      } else {\n        return this.models;\n      }\n    },\n\n    /*\n      Add another sheet to the wanted list\n    */\n    addWanted: function(sheet) {\n      if(ttIndexOf(this.wanted, sheet) === -1) {\n        this.wanted.push(sheet);\n      }\n    },\n    \n    /*\n      Load all worksheets of the spreadsheet, turning each into a Tabletop Model.\n      Need to use injectScript because the worksheet view that you're working from\n      doesn't actually include the data. The list-based feed (/feeds/list/key..) does, though.\n      Calls back to loadSheet in order to get the real work done.\n\n      Used as a callback for the worksheet-based JSON\n    */\n    loadSheets: function(data) {\n      var i, ilen;\n      var toLoad = [];\n      this.googleSheetName = data.feed.title.$t;\n      this.foundSheetNames = [];\n\n      for(i = 0, ilen = data.feed.entry.length; i < ilen ; i++) {\n        this.foundSheetNames.push(data.feed.entry[i].title.$t);\n        // Only pull in desired sheets to reduce loading\n        if( this.isWanted(data.feed.entry[i].content.$t) ) {\n          var linkIdx = data.feed.entry[i].link.length-1;\n          var sheet_id = data.feed.entry[i].link[linkIdx].href.split('/').pop();\n          var json_path = \"/feeds/list/\" + this.key + \"/\" + sheet_id + \"/public/values?alt=\"\n          if (inNodeJS || supportsCORS) {\n            json_path += 'json';\n          } else {\n            json_path += 'json-in-script';\n          }\n          if(this.query) {\n            json_path += \"&sq=\" + this.query;\n          }\n          if(this.orderby) {\n            json_path += \"&orderby=column:\" + this.orderby.toLowerCase();\n          }\n          if(this.reverse) {\n            json_path += \"&reverse=true\";\n          }\n          toLoad.push(json_path);\n        }\n      }\n\n      this.sheetsToLoad = toLoad.length;\n      for(i = 0, ilen = toLoad.length; i < ilen; i++) {\n        this.requestData(toLoad[i], this.loadSheet);\n      }\n    },\n\n    /*\n      Access layer for the this.models\n      .sheets() gets you all of the sheets\n      .sheets('Sheet1') gets you the sheet named Sheet1\n    */\n    sheets: function(sheetName) {\n      if(typeof sheetName === \"undefined\") {\n        return this.models;\n      } else {\n        if(typeof(this.models[ sheetName ]) === \"undefined\") {\n          // alert( \"Can't find \" + sheetName );\n          return;\n        } else {\n          return this.models[ sheetName ];\n        }\n      }\n    },\n\n    sheetReady: function(model) {\n      this.models[ model.name ] = model;\n      if(ttIndexOf(this.model_names, model.name) === -1) {\n        this.model_names.push(model.name);\n      }\n\n      this.sheetsToLoad--;\n      if(this.sheetsToLoad === 0)\n        this.doCallback();\n    },\n    \n    /*\n      Parse a single list-based worksheet, turning it into a Tabletop Model\n\n      Used as a callback for the list-based JSON\n    */\n    loadSheet: function(data) {\n      var that = this;\n      var model = new Tabletop.Model( { data: data, \n                                        parseNumbers: this.parseNumbers,\n                                        postProcess: this.postProcess,\n                                        tabletop: this,\n                                        prettyColumnNames: this.prettyColumnNames,\n                                        onReady: function() {\n                                          that.sheetReady(this);\n                                        } } );\n    },\n\n    /*\n      Execute the callback upon loading! Rely on this.data() because you might\n        only request certain pieces of data (i.e. simpleSheet mode)\n      Tests this.sheetsToLoad just in case a race condition happens to show up\n    */\n    doCallback: function() {\n      if(this.sheetsToLoad === 0) {\n        this.callback.apply(this.callbackContext || this, [this.data(), this]);\n      }\n    },\n\n    log: function(msg) {\n      if(this.debug) {\n        if(typeof console !== \"undefined\" && typeof console.log !== \"undefined\") {\n          Function.prototype.apply.apply(console.log, [console, arguments]);\n        }\n      }\n    }\n\n  };\n\n  /*\n    Tabletop.Model stores the attribute names and parses the worksheet data\n      to turn it into something worthwhile\n\n    Options should be in the format { data: XXX }, with XXX being the list-based worksheet\n  */\n  Tabletop.Model = function(options) {\n    var i, j, ilen, jlen;\n    this.column_names = [];\n    this.name = options.data.feed.title.$t;\n    this.tabletop = options.tabletop;\n    this.elements = [];\n    this.onReady = options.onReady;\n    this.raw = options.data; // A copy of the sheet's raw data, for accessing minutiae\n\n    if(typeof(options.data.feed.entry) === 'undefined') {\n      options.tabletop.log(\"Missing data for \" + this.name + \", make sure you didn't forget column headers\");\n      this.original_columns = [];\n      this.elements = [];\n      this.onReady.call(this);\n      return;\n    }\n    \n    for(var key in options.data.feed.entry[0]){\n      if(/^gsx/.test(key))\n        this.column_names.push( key.replace(\"gsx$\",\"\") );\n    }\n\n    this.original_columns = this.column_names;\n    \n    for(i = 0, ilen =  options.data.feed.entry.length ; i < ilen; i++) {\n      var source = options.data.feed.entry[i];\n      var element = {};\n      for(var j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n        var cell = source[ \"gsx$\" + this.column_names[j] ];\n        if (typeof(cell) !== 'undefined') {\n          if(options.parseNumbers && cell.$t !== '' && !isNaN(cell.$t))\n            element[ this.column_names[j] ] = +cell.$t;\n          else\n            element[ this.column_names[j] ] = cell.$t;\n        } else {\n            element[ this.column_names[j] ] = '';\n        }\n      }\n      if(element.rowNumber === undefined)\n        element.rowNumber = i + 1;\n      if( options.postProcess )\n        options.postProcess(element);\n      this.elements.push(element);\n    }\n    \n    if(options.prettyColumnNames)\n      this.fetchPrettyColumns();\n    else\n      this.onReady.call(this);\n  };\n\n  Tabletop.Model.prototype = {\n    /*\n      Returns all of the elements (rows) of the worksheet as objects\n    */\n    all: function() {\n      return this.elements;\n    },\n    \n    fetchPrettyColumns: function() {\n      if(!this.raw.feed.link[3])\n        return this.ready();\n      var cellurl = this.raw.feed.link[3].href.replace('/feeds/list/', '/feeds/cells/').replace('https://spreadsheets.google.com', '');\n      var that = this;\n      this.tabletop.requestData(cellurl, function(data) {\n        that.loadPrettyColumns(data)\n      });\n    },\n    \n    ready: function() {\n      this.onReady.call(this);\n    },\n    \n    /*\n     * Store column names as an object\n     * with keys of Google-formatted \"columnName\"\n     * and values of human-readable \"Column name\"\n     */\n    loadPrettyColumns: function(data) {\n      var pretty_columns = {};\n\n      var column_names = this.column_names;\n\n      var i = 0;\n      var l = column_names.length;\n\n      for (; i < l; i++) {\n        if (typeof data.feed.entry[i].content.$t !== 'undefined') {\n          pretty_columns[column_names[i]] = data.feed.entry[i].content.$t;\n        } else {\n          pretty_columns[column_names[i]] = column_names[i];\n        }\n      }\n\n      this.pretty_columns = pretty_columns;\n\n      this.prettifyElements();\n      this.ready();\n    },\n    \n    /*\n     * Go through each row, substitutiting\n     * Google-formatted \"columnName\"\n     * with human-readable \"Column name\"\n     */\n    prettifyElements: function() {\n      var pretty_elements = [],\n          ordered_pretty_names = [],\n          i, j, ilen, jlen;\n\n      var ordered_pretty_names;\n      for(j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n        ordered_pretty_names.push(this.pretty_columns[this.column_names[j]]);\n      }\n\n      for(i = 0, ilen = this.elements.length; i < ilen; i++) {\n        var new_element = {};\n        for(j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n          var new_column_name = this.pretty_columns[this.column_names[j]];\n          new_element[new_column_name] = this.elements[i][this.column_names[j]];\n        }\n        pretty_elements.push(new_element);\n      }\n      this.elements = pretty_elements;\n      this.column_names = ordered_pretty_names;\n    },\n\n    /*\n      Return the elements as an array of arrays, instead of an array of objects\n    */\n    toArray: function() {\n      var array = [],\n          i, j, ilen, jlen;\n      for(i = 0, ilen = this.elements.length; i < ilen; i++) {\n        var row = [];\n        for(j = 0, jlen = this.column_names.length; j < jlen ; j++) {\n          row.push( this.elements[i][ this.column_names[j] ] );\n        }\n        array.push(row);\n      }\n      return array;\n    }\n  };\n\n  if(typeof module !== \"undefined\" && module.exports) { //don't just use inNodeJS, we may be in Browserify\n    module.exports = Tabletop;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n        return Tabletop;\n    });\n  } else {\n    window.Tabletop = Tabletop;\n  }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Tabletop/src/tabletop.js\n ** module id = 1\n ** module chunks = 2\n **/","/* \n  A drop-in read-only Google-Spreadsheets-backed replacement for Backbone.sync\n\n  Tabletop must be successfully initialized prior to using fetch()\n\n  Backbone.tabletopSync only supports the 'read' method, and will fail\n    loudly on any other operations\n*/\n\nBackbone.tabletopSync = function(method, model, options, error) {\n  // Backwards compatibility with Backbone <= 0.3.3\n  if (typeof options == 'function') {\n    options = {\n      success: options,\n      error: error\n    };\n  }\n  \n  var resp;\n\n  var tabletopOptions = model.tabletop || model.collection.tabletop;\n\n  var instance = tabletopOptions.instance;\n\n  if(typeof(instance) == \"undefined\") {\n    instance = Tabletop.init( { key: tabletopOptions.key,\n                                wanted: [ tabletopOptions.sheet ],\n                                wait: true } )\n    tabletopOptions.instance = instance;\n  } else {\n    instance.addWanted(tabletopOptions.sheet);\n  }\n  \n  if(typeof(tabletopOptions.sheet) == \"undefined\") {\n    return;\n  }\n  \n  var sheet = instance.sheets( tabletopOptions.sheet );\n\n  if(typeof(sheet) === \"undefined\") {\n    // Hasn't been fetched yet, let's fetch!\n    \n    // Let's make sure we aren't re-requesting a sheet that doesn't exist\n    if(typeof(instance.foundSheetNames) !== 'undefined' && _.indexOf(instance.foundSheetNames, tabletopOptions.sheet) === -1) {\n      throw(\"Can't seem to find sheet \" + tabletopOptions.sheet);\n    }\n\n    instance.fetch( function() {\n      Backbone.tabletopSync(method, model, options, error);\n    })\n    return;\n  }\n  \n  switch (method) {\n    case \"read\":\n      if(model.id) {\n        resp = _.find( sheet.all(), function(item) {\n          return model.id == item[model.idAttribute];\n        }, this);\n      } else {\n        resp = sheet.all();\n      }\n      break;\n    default:\n      throw(\"Backbone.tabletopSync is read-only\");\n  }\n\n  if (resp) {\n    options.success(resp);\n  } else {\n    options.error(\"Record not found\");\n  }\n\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Tabletop/src/backbone.tabletopSync.js\n ** module id = 3\n ** module chunks = 2\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n  try {\n    cachedSetTimeout = setTimeout;\n  } catch (e) {\n    cachedSetTimeout = function () {\n      throw new Error('setTimeout is not defined');\n    }\n  }\n  try {\n    cachedClearTimeout = clearTimeout;\n  } catch (e) {\n    cachedClearTimeout = function () {\n      throw new Error('clearTimeout is not defined');\n    }\n  }\n} ())\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = cachedSetTimeout.call(null, cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    cachedClearTimeout.call(null, timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        cachedSetTimeout.call(null, drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 11\n ** module chunks = 2\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 18\n ** module chunks = 2\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 19\n ** module chunks = 2\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 20\n ** module chunks = 2\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 21\n ** module chunks = 2\n **/"],"sourceRoot":""}